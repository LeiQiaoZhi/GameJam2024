//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Default Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DefaultControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DefaultControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Default Controls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""447e586c-7ebf-49d2-b1c2-296d2b0877ba"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""03edca6e-6a10-43df-a143-22cf53766347"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""76498708-2fd1-46fe-9990-fdc7b1526398"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Place Object"",
                    ""type"": ""Button"",
                    ""id"": ""82c9fe5b-cada-4318-b05d-cd99c291e27d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Mirror 1"",
                    ""type"": ""Button"",
                    ""id"": ""1e92027c-4c7c-4b76-bffe-d340d7dfb643"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Mirror 2"",
                    ""type"": ""Button"",
                    ""id"": ""5d96a80f-50b4-4061-957d-3faf1a49ae4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Mirror 3"",
                    ""type"": ""Button"",
                    ""id"": ""780d5993-49cc-4045-aeab-57c666970b76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Mirror 4"",
                    ""type"": ""Button"",
                    ""id"": ""11c1fb9d-f9a2-451c-a1e4-a53812224243"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Mirror 5"",
                    ""type"": ""Button"",
                    ""id"": ""29c95323-2a06-4479-81f4-0e8d1a2d2f42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""3acc39e9-5655-47c8-ae27-991a2b647bb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""938e8442-74b0-493d-a2e2-810b5f2d6820"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""49b4a01c-744c-4a75-9551-5c484b2c5400"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""822bec20-8678-419c-a1dc-c3bdfb454db3"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bb5b5b92-08d0-425b-8052-16354340d4ab"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5a2d4763-ea56-4791-a102-9737fbebfa70"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""708f17ba-14aa-4530-bab7-0262c08caa9e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""89b36b15-5e91-4a1a-8581-8364a4543d38"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""d218b6f0-d667-4f41-895d-db1166fc01ed"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""3a2b1550-3ba9-4b96-8715-fd36fcf691e4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a04672ce-61b9-4353-88c6-a8e8c2f1e18d"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""e9c01084-35ac-479f-bda5-7b82d1e6b062"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""e5ee6597-c32f-4c12-a9f6-33791b59459d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""acdad574-facf-4f90-9819-be83f7ee8e3a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Place Object"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89cb7085-baf9-431f-a8cf-5faf065653a4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Place Object"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f829b11-a779-43a6-ad21-d84052c871c9"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Mirror 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""368635e4-4254-4ff4-8eab-6da7b7abd4cf"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Mirror 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03db0cf4-312e-41f8-9be4-96e962338159"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Mirror 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd2b056c-31ac-413d-9a92-c5e48d6a5310"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Mirror 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""33a9ef7b-0858-4329-b0f9-d33638892bdc"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8239f346-53fa-4622-9e60-57f50f09e698"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Mirror 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
        m_Gameplay_CameraRotate = m_Gameplay.FindAction("Camera Rotate", throwIfNotFound: true);
        m_Gameplay_PlaceObject = m_Gameplay.FindAction("Place Object", throwIfNotFound: true);
        m_Gameplay_SelectMirror1 = m_Gameplay.FindAction("Select Mirror 1", throwIfNotFound: true);
        m_Gameplay_SelectMirror2 = m_Gameplay.FindAction("Select Mirror 2", throwIfNotFound: true);
        m_Gameplay_SelectMirror3 = m_Gameplay.FindAction("Select Mirror 3", throwIfNotFound: true);
        m_Gameplay_SelectMirror4 = m_Gameplay.FindAction("Select Mirror 4", throwIfNotFound: true);
        m_Gameplay_SelectMirror5 = m_Gameplay.FindAction("Select Mirror 5", throwIfNotFound: true);
        m_Gameplay_Shoot = m_Gameplay.FindAction("Shoot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Move;
    private readonly InputAction m_Gameplay_CameraRotate;
    private readonly InputAction m_Gameplay_PlaceObject;
    private readonly InputAction m_Gameplay_SelectMirror1;
    private readonly InputAction m_Gameplay_SelectMirror2;
    private readonly InputAction m_Gameplay_SelectMirror3;
    private readonly InputAction m_Gameplay_SelectMirror4;
    private readonly InputAction m_Gameplay_SelectMirror5;
    private readonly InputAction m_Gameplay_Shoot;
    public struct GameplayActions
    {
        private @DefaultControls m_Wrapper;
        public GameplayActions(@DefaultControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputAction @CameraRotate => m_Wrapper.m_Gameplay_CameraRotate;
        public InputAction @PlaceObject => m_Wrapper.m_Gameplay_PlaceObject;
        public InputAction @SelectMirror1 => m_Wrapper.m_Gameplay_SelectMirror1;
        public InputAction @SelectMirror2 => m_Wrapper.m_Gameplay_SelectMirror2;
        public InputAction @SelectMirror3 => m_Wrapper.m_Gameplay_SelectMirror3;
        public InputAction @SelectMirror4 => m_Wrapper.m_Gameplay_SelectMirror4;
        public InputAction @SelectMirror5 => m_Wrapper.m_Gameplay_SelectMirror5;
        public InputAction @Shoot => m_Wrapper.m_Gameplay_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @CameraRotate.started += instance.OnCameraRotate;
            @CameraRotate.performed += instance.OnCameraRotate;
            @CameraRotate.canceled += instance.OnCameraRotate;
            @PlaceObject.started += instance.OnPlaceObject;
            @PlaceObject.performed += instance.OnPlaceObject;
            @PlaceObject.canceled += instance.OnPlaceObject;
            @SelectMirror1.started += instance.OnSelectMirror1;
            @SelectMirror1.performed += instance.OnSelectMirror1;
            @SelectMirror1.canceled += instance.OnSelectMirror1;
            @SelectMirror2.started += instance.OnSelectMirror2;
            @SelectMirror2.performed += instance.OnSelectMirror2;
            @SelectMirror2.canceled += instance.OnSelectMirror2;
            @SelectMirror3.started += instance.OnSelectMirror3;
            @SelectMirror3.performed += instance.OnSelectMirror3;
            @SelectMirror3.canceled += instance.OnSelectMirror3;
            @SelectMirror4.started += instance.OnSelectMirror4;
            @SelectMirror4.performed += instance.OnSelectMirror4;
            @SelectMirror4.canceled += instance.OnSelectMirror4;
            @SelectMirror5.started += instance.OnSelectMirror5;
            @SelectMirror5.performed += instance.OnSelectMirror5;
            @SelectMirror5.canceled += instance.OnSelectMirror5;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @CameraRotate.started -= instance.OnCameraRotate;
            @CameraRotate.performed -= instance.OnCameraRotate;
            @CameraRotate.canceled -= instance.OnCameraRotate;
            @PlaceObject.started -= instance.OnPlaceObject;
            @PlaceObject.performed -= instance.OnPlaceObject;
            @PlaceObject.canceled -= instance.OnPlaceObject;
            @SelectMirror1.started -= instance.OnSelectMirror1;
            @SelectMirror1.performed -= instance.OnSelectMirror1;
            @SelectMirror1.canceled -= instance.OnSelectMirror1;
            @SelectMirror2.started -= instance.OnSelectMirror2;
            @SelectMirror2.performed -= instance.OnSelectMirror2;
            @SelectMirror2.canceled -= instance.OnSelectMirror2;
            @SelectMirror3.started -= instance.OnSelectMirror3;
            @SelectMirror3.performed -= instance.OnSelectMirror3;
            @SelectMirror3.canceled -= instance.OnSelectMirror3;
            @SelectMirror4.started -= instance.OnSelectMirror4;
            @SelectMirror4.performed -= instance.OnSelectMirror4;
            @SelectMirror4.canceled -= instance.OnSelectMirror4;
            @SelectMirror5.started -= instance.OnSelectMirror5;
            @SelectMirror5.performed -= instance.OnSelectMirror5;
            @SelectMirror5.canceled -= instance.OnSelectMirror5;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnCameraRotate(InputAction.CallbackContext context);
        void OnPlaceObject(InputAction.CallbackContext context);
        void OnSelectMirror1(InputAction.CallbackContext context);
        void OnSelectMirror2(InputAction.CallbackContext context);
        void OnSelectMirror3(InputAction.CallbackContext context);
        void OnSelectMirror4(InputAction.CallbackContext context);
        void OnSelectMirror5(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
}
